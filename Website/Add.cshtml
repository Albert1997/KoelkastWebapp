@{
    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Account/login");
    }

    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Voeg een product toe";
    
    var Product = "";
    var Aantal = "";
    var Afbeelding = "";
    var Hoeveelheid = "";

    var Email = WebSecurity.CurrentUserName;
    var db = Database.Open("StarterSite");
    var codevanuser = "SELECT Koelkastnr FROM Userprofile WHERE LOWER(Email) = LOWER(@0)";
    if(Email == ""){Response.Redirect("~/Account/Login");};
    var decodevanbelang = db.QueryValue(codevanuser, Email);
    string map = "/Images/Productafbeeldingen/";


    if(IsPost){
        Validation.RequireField("Product", "Je moet een product naam kiezen");
        Validation.RequireField("Aantal", "Kies een Aantal");
        Validation.Add("Aantal", Validator.Integer("U mag alleen cijfers gebruiken voor aantal eenheden"));
        Validation.RequireField("Hoeveelheid", "Kies een Hoeveelheid");
        Validation.Add("Product",
        Validator.StringLength(
            maxLength: 20,
            minLength: 1,
            errorMessage: "U mag maximaal 20 tekens gebruiken"));
        Validation.Add("Aantal",
        Validator.StringLength(
            maxLength: 2,
            minLength: 1,
            errorMessage: "U mag maximaal 99 eenheden toevoegen"));
        

            Product = Request.Form["Product"];
            Aantal = Request.Form["Aantal"];
            if(Functions.CheckURLValid(Request.Form["Afbeelding"]))
            {
                Afbeelding = Request.Form["Afbeelding"];
            }
            else if (Request.Form["Afbeelding"].IsEmpty())
            {
                Afbeelding = map + "Default.png";
            }
            else
            {
                Afbeelding = map + Request.Form["Afbeelding"];
            }
            Hoeveelheid = Request.Form["Hoeveelheid"];

        if(Validation.IsValid()){

            
            var insertCommand = "INSERT INTO Product (Product, Koelkastnr, Aantal, Afbeelding, Hoeveelheid) VALUES(@0, @1, @2, @3, @4)";
            

            db.Execute(insertCommand, Product, decodevanbelang, Aantal, Afbeelding, Hoeveelheid);
            Response.Redirect("~/Koelkast");
        }
    }
}


<h1>Voeg een product toe</h1>
    @Html.ValidationSummary()
  <form method="post">
    <fieldset>
      <legend>Product</legend>

      <p><label for="Product">Product:</label>
         <input class="Forms" type="text" name="Product" value="@Product" /></p>
        
      <p><label for="Aantal">Aantal:</label>
         <input class="Forms" type="text" name="Aantal" value="@Aantal" /></p>
        
      <p><label for="Afbeelding">Afbeelding:</label>
         <input class="Forms" type="text" name="Afbeelding" value="@Afbeelding" /></p>

        <p><label for="Hoeveelheid">Hoeveelheid:</label>
        <select name="Hoeveelheid">
            <option selected="selected" value="Per stuk">Per stuk</option>
            <option value="Per verpakking">Per verpakking</option>
            <option value="Per 100 gr">Per 100 gr</option>
            <option value="per 1000 gr">per 1000 gr</option>
        </select>

      <p><input type="submit" class="Submit-btn" name="buttonSubmit" value="Toevoegen" /></p>
    </fieldset>
  </form>
  <a class="Link-btn" href="~/Koelkast"><p class="Submit-btn">Terug</p></a>