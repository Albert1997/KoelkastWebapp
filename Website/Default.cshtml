@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Registreer";

    int Koelkastnr = 0;
    Random random = new Random ();
    var randomnumber = random.Next(100000,999999);
    Koelkastnr = randomnumber;

    // Initialize general page variables
    var email = "";
    var password = "";
    var confirmPassword = "";

    // Setup validation
Validation.RequireField("email", "Voer een emailadres in");
    Validation.RequireField("password", "Voer een wachtwoord in");
    Validation.Add("confirmPassword",
        Validator.EqualsTo("password", "Wachtwoorden komen niet overeen"));
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Wachtwoord moet tenminste 6 karakters lang zijn"));

    // If this is a POST request, validate and process data
    if (IsPost) {
        AntiForgery.Validate();
        email = Request.Form["email"];
        password = Request.Form["password"];
        confirmPassword = Request.Form["confirmPassword"];



        // If all information is valid, create a new account
        if (Validation.IsValid()) {
            // Insert a new user into the database
            var db = Database.Open("StarterSite");

            // Check if user already exists
            var user = db.QuerySingle("SELECT Email FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", email);
            if (user == null) {
                // Insert email into the profile table
                db.Execute("INSERT INTO UserProfile (Email) VALUES (@0)", email);
                db.Execute("UPDATE UserProfile SET Koelkastnr = @0 WHERE Email = @1", Koelkastnr, email);

                // Create and associate a new entry in the membership database.
                // If successful, continue processing the request
                try {
                    bool requireEmailConfirmation = !WebMail.SmtpServer.IsEmpty();
                    var token = WebSecurity.CreateAccount(email, password, requireEmailConfirmation);
                    if (requireEmailConfirmation) {
                        var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
                        var confirmationUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Account/Confirm?confirmationCode=" + HttpUtility.UrlEncode(token));

                        WebMail.Send(
                            to: email,
                            subject: "Please confirm your account",
                            body: "Your confirmation code is: " + token + ". Visit <a href=\"" + confirmationUrl + "\">" + confirmationUrl + "</a> to activate your account."
                        );
                    }

                    if (requireEmailConfirmation) {
                        // Thank the user for registering and let them know an email is on its way
                        Response.Redirect("~/Account/Thanks");
                    } else {
                        // Navigate back to the homepage and exit
                        WebSecurity.Login(email, password);

                        Response.Redirect("~/");
                    }
                } catch (System.Web.Security.MembershipCreateUserException e) {
                    ModelState.AddFormError(e.Message);
                }
            } else {
                // User already exists
                ModelState.AddFormError("Email is al in gebruik.");
            }
        }
    }
}



@section featured {
    <section class="featured">


        
        <br>
        <div class="row">
        <div class="Div-Home-60 col-md-7">
            <h3 class="h3-Home">Online koelkast</h3>
            <p>
                Doormiddel van onze Web applicatie kunt u een digitale koelkast bijhouden. 
                <br>
                De producten zijn toe te voegen door gebruik te 
                maken van een barcode scanner (Alleen desktop-versie) en ook kunnen producten handmatig worden toegevoegd.
            <br>
            <br>
                Ook kunt u een gezamenlijke koelkast aanmaken, handig als u uw koelkast met iemand deelt.
            </p>
        </div>
            <div class="col-md-1">
            </div>
        <div class="Div-Home-40 col-md-4">
            @*<p>
                Jaaaaa
            </p>
            <a class="Link-btn" href="~/Account/Register"><p class="Submit-btn">Heeft u nog geen account?</p></a>
            <a class="Link-btn" href="~/Account/Login"><p class="Submit-btn">Klik hier om in te loggen</p></a>*@
            @if(!WebSecurity.IsAuthenticated) {
                <form method="post">
        @AntiForgery.GetHtml()
        @* If at least one validation error exists, notify the user *@
        @Html.ValidationSummary("Het creëeren van een account is mislukt, corrigeer de errors en probeer opnieuw.", excludeFieldErrors: true, htmlAttributes: null)

        <fieldset>

            <div class="form-group">
                <label for="email" @if(!ModelState.IsValidField("email")){<text> class="error-label" </text>  }>Gebruikersnaam</label>
                <input type="text" id="email" name="email" value="@email" @Validation.For("email") class="form-control" />
                @* Write any email validation errors to the page *@
                @Html.ValidationMessage("email")
            </div>
            <div class="form-group">
                <label for="password" @if(!ModelState.IsValidField("password")) {<text> class="error-label" </text>  }>Wachtwoord</label>
                <input type="password" id="password" name="password" @Validation.For("password") class="form-control" />
                @* Write any password validation errors to the page *@
                @Html.ValidationMessage("password")
            </div>
            <div class="form-group">
                <label for="confirmPassword" @if(!ModelState.IsValidField("confirmPassword")) {<text> class="error-label" </text>  }>Bevestig wachtwoord</label>
                <input type="password" id="confirmPassword" name="confirmPassword" @Validation.For("confirmPassword") class="form-control" />
                @* Write any password validation errors to the page *@
                @Html.ValidationMessage("confirmPassword")
            </div>

            <button type="submit" class="Submit-btn">Registreer</button>
        </fieldset>
    </form>
}
            else {
                <h3>Welkom @WebSecurity.CurrentUserName !</h3>
                <br>
                <br>    
                <a class="Link-btn" href="~/Koelkast"><p class="Submit-btn">Klik hier om uw koelkast te bezoeken</p></a>
                <a class="Link-btn" href="~/Delen"><p class="Submit-btn">Klik hier om uw koelkast te delen</p></a>
            }
        </div>
        <br>
        <br>
            @*<img src="~/Images/Koelkast-HomePage.jpg" alt="koelkast" id="HomePage-img"></img>*@
        </div>
    </section>
}


